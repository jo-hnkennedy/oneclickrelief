// warning: This file is auto generated by `npm run build:tests`
// Do not edit by hand!
process.env.TZ = 'UTC'
var expect = require('chai').expect
var ini_set = require('../../../../src/php/info/ini_set') // eslint-disable-line no-unused-vars,camelcase
var ini_get = require('../../../../src/php/info/ini_get') // eslint-disable-line no-unused-vars,camelcase
var number_format = require('../../../../src/php/strings/number_format.js') // eslint-disable-line no-unused-vars,camelcase

describe('src/php/strings/number_format.js (tested in test/languages/php/strings/test-number_format.js)', function () {
  it('should pass example 1', function (done) {
    var expected = '1,235'
    var result = number_format(1234.56)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 2', function (done) {
    var expected = '1 234,56'
    var result = number_format(1234.56, 2, ',', ' ')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 3', function (done) {
    var expected = '1234.57'
    var result = number_format(1234.5678, 2, '.', '')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 4', function (done) {
    var expected = '67,00'
    var result = number_format(67, 2, ',', '.')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 5', function (done) {
    var expected = '1,000'
    var result = number_format(1000)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 6', function (done) {
    var expected = '67.31'
    var result = number_format(67.311, 2)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 7', function (done) {
    var expected = '1,000.6'
    var result = number_format(1000.55, 1)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 8', function (done) {
    var expected = '67.000,00000'
    var result = number_format(67000, 5, ',', '.')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 9', function (done) {
    var expected = '1'
    var result = number_format(0.9, 0)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 10', function (done) {
    var expected = '1.20'
    var result = number_format('1.20', 2)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 11', function (done) {
    var expected = '1.2000'
    var result = number_format('1.20', 4)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 12', function (done) {
    var expected = '1.200'
    var result = number_format('1.2000', 3)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 13', function (done) {
    var expected = '100 050.00'
    var result = number_format('1 000,50', 2, '.', ' ')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 14', function (done) {
    var expected = '0.00000001'
    var result = number_format(1e-8, 8, '.', '')
    expect(result).to.deep.equal(expected)
    done()
  })
})
