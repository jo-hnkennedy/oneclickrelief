// warning: This file is auto generated by `npm run build:tests`
// Do not edit by hand!
process.env.TZ = 'UTC'
var expect = require('chai').expect
var ini_set = require('../../../../src/php/info/ini_set') // eslint-disable-line no-unused-vars,camelcase
var ini_get = require('../../../../src/php/info/ini_get') // eslint-disable-line no-unused-vars,camelcase
var _phpCastString = require('../../../../src/php/_helpers/_phpCastString.js') // eslint-disable-line no-unused-vars,camelcase

describe('src/php/_helpers/_phpCastString.js (tested in test/languages/php/_helpers/test-_phpCastString.js)', function () {
  it('should pass example 1', function (done) {
    var expected = '1'
    var result = _phpCastString(true)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 2', function (done) {
    var expected = ''
    var result = _phpCastString(false)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 3', function (done) {
    var expected = 'foo'
    var result = _phpCastString('foo')
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 4', function (done) {
    var expected = 'NAN'
    var result = _phpCastString(0/0)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 5', function (done) {
    var expected = 'INF'
    var result = _phpCastString(1/0)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 6', function (done) {
    var expected = '-INF'
    var result = _phpCastString(-1/0)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 7', function (done) {
    var expected = ''
    var result = _phpCastString(null)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 8', function (done) {
    var expected = ''
    var result = _phpCastString(undefined)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 9', function (done) {
    var expected = 'Array'
    var result = _phpCastString([])
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 10', function (done) {
    var expected = 'Object'
    var result = _phpCastString({})
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 11', function (done) {
    var expected = '0'
    var result = _phpCastString(0)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 12', function (done) {
    var expected = '1'
    var result = _phpCastString(1)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 13', function (done) {
    var expected = '3.14'
    var result = _phpCastString(3.14)
    expect(result).to.deep.equal(expected)
    done()
  })
})
